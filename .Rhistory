rc_raster
# mapa fasterize
fasterize::plot(rc_raster)
# mapa landscapetools
landscapetools::show_landscape(rc_raster, discrete = TRUE) +
scale_fill_manual(values = c("blue", "orange", "gray", "forestgreen", "green")) +
theme(legend.position = "none")
# mapa ggplot2
ggplot() +
geom_raster(data = raster::rasterToPoints(rc_raster) %>% tibble::as_tibble(),
aes(x, y, fill = factor(layer))) +
coord_sf() +
scale_fill_manual(values = c("blue", "orange", "gray", "forestgreen", "green")) +
labs(x = "Longitude", y = "Latitude", fill = "Classes") +
theme_minimal() +
theme(legend.position = c(.2, .2),
axis.text.y = element_text(angle = 90, hjust = .5))
# mapa tmap
tm_shape(rc_raster) +
tm_raster(style = "cat", palette = c("blue", "orange", "gray", "forestgreen", "green"),
title = "Classes") +
tm_grid(lines = FALSE, labels.rot = c(0, 90), labels.size = .8) +
tm_compass() +
tm_scale_bar(text.size = .6) +
tm_layout(legend.position = c("left", "bottom"))
# exportar
raster::writeRaster(x = rc_raster,
filename = "./02_dados/SP_3543907_USO_raster_30m",
format = "GTiff",
options = c("COMPRESS=DEFLATE" , "TFW=TRUE"),
overwrite = TRUE)
# buffers -----------------------------------------------------------------
# coordenadas
co <- tibble::tibble(id = 1:4,
x = c(222993, 229076, 242815, 231477),
y = c(7526113, 7517654, 7528139, 7507708))
co
# pontos
po <- sf::st_as_sf(x = co, coords = c("x", "y"), crs = raster::crs(rc))
po
# buffers
bu_2km <- sf::st_buffer(x = po, dist = 2000)
bu_2km
# mapa
tm_shape(rc_raster) +
tm_raster(style = "cat", palette = c("blue", "orange", "gray", "forestgreen", "green"),
title = "Classes") +
tm_shape(bu_2km) +
tm_borders(col = "red", lwd = 2) +
tm_shape(po) +
tm_dots(size = .7, shape = 20, alpha = .7) +
tm_grid(lines = FALSE, labels.rot = c(0, 90), labels.size = .8) +
tm_compass() +
tm_scale_bar(text.size = .6) +
tm_layout(legend.position = c("left", "bottom"))
# ajustar paisagens -------------------------------------------------------
# list
rc_raster_pa <- list()
rc_raster_pa
# crop e mask das paisagens
for(i in 1:4){
# informacao
print(paste0("Ajustando a paisagem 0", i))
# filter
bu_2km_pa <- bu_2km %>%
dplyr::filter(id == i)
# crop e mask
rc_raster_pa[[i]] <- rc_raster %>%
raster::crop(bu_2km_pa) %>%
raster::mask(bu_2km_pa)
}
# nomes das paisagens
rc_raster_pa
names(rc_raster_pa)
names(rc_raster_pa) <- paste0("paisagem_0", 1:4)
names(rc_raster_pa)
# mapas
la01 <- landscapetools::show_landscape(rc_raster_pa$paisagem_01, discrete = TRUE) +
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 01") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5, size = 6),
axis.text.x = element_text(size = 6))
la01
la02 <- landscapetools::show_landscape(rc_raster_pa$paisagem_02, discrete = TRUE)+
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 02") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5, size = 6),
axis.text.x = element_text(size = 6))
la02
la03 <- landscapetools::show_landscape(rc_raster_pa$paisagem_03, discrete = TRUE)+
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 03") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5, size = 6),
axis.text.x = element_text(size = 6))
la03
la04 <- landscapetools::show_landscape(rc_raster_pa$paisagem_04, discrete = TRUE)+
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 04") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5, size = 6),
axis.text.x = element_text(size = 6))
la04
# todos os mapas - patchwork
la01 + la02 + la03 + la04
la04 <- landscapetools::show_landscape(rc_raster_pa$paisagem_04, discrete = TRUE)+
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 04") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5))
la04
# mapas
la01 <- landscapetools::show_landscape(rc_raster_pa$paisagem_01, discrete = TRUE) +
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 01") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5))
la01
la02 <- landscapetools::show_landscape(rc_raster_pa$paisagem_02, discrete = TRUE)+
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 02") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5))
la02
la03 <- landscapetools::show_landscape(rc_raster_pa$paisagem_03, discrete = TRUE)+
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 03") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5))
la03
la04 <- landscapetools::show_landscape(rc_raster_pa$paisagem_04, discrete = TRUE)+
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 04") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5))
la04
# todos os mapas - patchwork
la01 + la02 + la03 + la04
la04 <- landscapetools::show_landscape(rc_raster_pa$paisagem_04, discrete = TRUE)+
scale_fill_manual(values = c("blue", "orange", "forestgreen")) +
labs(title = "Paisagem 04") +
theme(legend.position = "none",
axis.text.y = element_text(angle = 90, hjust = .5))
la04
# todos os mapas - patchwork
la01 + la02 + la03 + la04
# exportar
for(i in 1:4){
# informacao
print(paste0("Exportanto a ", names(rc_raster_pa)[i]))
# exportar
raster::writeRaster(x = rc_raster_pa[[i]],
filename = paste0("./02_dados/", names(rc_raster_pa)[i]),
format = "GTiff",
options = c("COMPRESS=DEFLATE" , "TFW=TRUE"),
overwrite = TRUE)
}
# checar os raster --------------------------------------------------------
landscapemetrics::check_landscape(rc_raster_pa)
# listar as metricas ------------------------------------------------------
# metricas
all_metrics <- landscapemetrics::list_lsm()
all_metrics
all_metrics
# patch metrics
patch_metrics <- landscapemetrics::list_lsm() %>%
dplyr::filter(level == "patch") %>%
dplyr::arrange(type)
patch_metrics
patch_metrics$type %>% table
# class metrics
class_metrics <- landscapemetrics::list_lsm() %>%
dplyr::filter(level == "class") %>%
dplyr::arrange(type)
class_metrics
class_metrics$type %>% table
# landscape metrics
landscape_metrics <- landscapemetrics::list_lsm() %>%
dplyr::filter(level == "landscape") %>%
dplyr::arrange(type)
landscape_metrics
landscape_metrics$type %>% table
# exportar
readr::write_csv(all_metrics, "./01_script/metricas.csv")
# exportar
readr::write_csv(all_metrics, "./01_script/metricas.csv")
# calcular as metricas ----------------------------------------------------
# area in patch level
area_p <- landscapemetrics::lsm_p_area(landscape = rc_raster_pa)
area_p
area_p
# area in class level
area_c <- landscapemetrics::lsm_c_ca(landscape = rc_raster_la)
# area in class level
area_c <- landscapemetrics::lsm_c_ca(landscape = rc_raster_pa)
area_c
# area in patch level
area_l <- landscapemetrics::lsm_l_ta(landscape = rc_raster_la)
# area in patch level
area_l <- landscapemetrics::lsm_l_ta(landscape = rc_raster_pa)
area_l
# verify
area_p %>%
dplyr::group_by(class) %>%
dplyr::summarise(area = sum(value))
area_c
# verify
area_p %>%
dplyr::group_by(layer, class) %>%
dplyr::summarise(area = sum(value))
area_c
all(area_p$value == area_c$value)
# verify
area_p_sum <- area_p %>%
dplyr::group_by(layer, class) %>%
dplyr::summarise(area = sum(value))
area_p_sum
area_c
all(area_p_sum$area == area_c$value)
area_p_sum
area_c
area_p %>%
dplyr::group_by(layer) %>%
dplyr::summarise(area = sum(value))
area_l
area_p_layer <- area_p %>%
dplyr::group_by(layer) %>%
dplyr::summarise(area = sum(value))
area_p_layer_sum <- area_p %>%
dplyr::group_by(layer) %>%
dplyr::summarise(area = sum(value))
area_l
all(area_p_layer_sum$area == area_l$value)
area_p_layer_sum
area_l
# calculate all metrics on patch level
lsm_patch <- landscapemetrics::calculate_lsm(landscape = rc_raster_pa,
level = "patch",
edge_depth = 1,
full_name = TRUE,
verbose = TRUE,
progress = TRUE)
lsm_patch
lsm_patch$metric %>% unique
lsm_class <- landscapemetrics::calculate_lsm(landscape = rc_raster_pa,
level = "class",
edge_depth = 1,
full_name = TRUE,
verbose = TRUE,
progress = TRUE)
lsm_class
lsm_class$metric %>% unique
lsm_class$layer %>% unique
lsm_class$metric %>% unique
lsm_class$level %>% unique
lsm_class$type %>% unique
lsm_class$function_name %>% unique
lsm_class$value
landscapemetrics::show_lsm(rc_raster_pa, what = "lsm_p_area", class = 4, label_lsm = TRUE, labels = FALSE) +
theme(legend.position = "none")
lsm_patch
lsm_patch
lsm_class <- landscapemetrics::calculate_lsm(landscape = rc_raster_pa,
level = "class",
edge_depth = 1,
full_name = TRUE,
verbose = TRUE,
progress = TRUE)
lsm_class
# calculate all metrics on landscape level
lsm_landscape <- landscapemetrics::calculate_lsm(landscape = la01,
level = "landscape",
edge_depth = 1,
full_name = TRUE,
verbose = TRUE,
progress = TRUE)
# calculate all metrics on landscape level
lsm_landscape <- landscapemetrics::calculate_lsm(landscape = rc_raster_pa,
level = "landscape",
edge_depth = 1,
full_name = TRUE,
verbose = TRUE,
progress = TRUE)
lsm_landscape
lsm_landscape
# maps --------------------------------------------------------------------
# plot landscape + landscape with labeled patches
landscapemetrics::show_patches(rc_raster_pa, class = 4, labels = FALSE)
landscapemetrics::show_cores(rc_raster_pa, class = 4, labels = FALSE)
# maps --------------------------------------------------------------------
# plot landscape + landscape with labeled patches
landscapemetrics::show_patches(landscape = rc_raster_pa$paisagem_01, class = 4, labels = TRUE)
# maps --------------------------------------------------------------------
# plot landscape + landscape with labeled patches
landscapemetrics::show_patches(landscape = rc_raster_pa$paisagem_01, class = 4, labels = FALSE)
la01
landscapemetrics::show_cores(rc_raster_pa$paisagem_01, class = 4, labels = FALSE)
la01
landscapemetrics::show_lsm(rc_raster_pa$paisagem_01, what = "lsm_p_area", class = 4,
label_lsm = TRUE, labels = FALSE) +
theme(legend.position = "none")
landscapemetrics::show_lsm(rc_raster_pa$paisagem_01, what = "lsm_p_area", class = 4,
label_lsm = TRUE, labels = FALSE)
# spatialize landscape metric values --------------------------------------
lsm_p_area_raster <- landscapemetrics::spatialize_lsm(rc_raster_pa$paisagem_01,
what = "lsm_p_area",
progress = TRUE)
lsm_p_area_raster
landscapetools::show_landscape(lsm_p_area_raster[[1]]$lsm_p_area)
# spatialize landscape metric values --------------------------------------
lsm_p_area_raster <- landscapemetrics::spatialize_lsm(rc_raster_pa$paisagem_01$layer,
what = "lsm_p_area",
progress = TRUE)
lsm_p_area_raster
landscapetools::show_landscape(lsm_p_area_raster[[1]]$lsm_p_area)
# spatialize landscape metric values --------------------------------------
binarized_raster <- util_binarize(rc_raster_pa$paisagem_01, breaks = 4)
# spatialize landscape metric values --------------------------------------
binarized_raster <- util_binarize(rc_raster_pa$paisagem_01, breaks = 3)
# spatialize landscape metric values --------------------------------------
binarized_raster <- landscapetools::util_classify(x = rc_raster_pa$paisagem_01,
n = c(0, 1))
# spatialize landscape metric values --------------------------------------
binarized_raster <- landscapetools::util_classify(x = rc_raster_pa$paisagem_01,
n = c(0, 0, 1))
# spatialize landscape metric values --------------------------------------
binarized_raster <- landscapetools::util_classify(x = rc_raster_pa$paisagem_01,
n = 1)
binarized_raster
binarized_raster %>% plot
gradient_landscape
plot(gradient_landscape)
fractal_landscape
fractal_landscape %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- util_binarize(rc_raster_pa$paisagem_01, breaks = 3)
# spatialize landscape metric values --------------------------------------
binarized_raster <- landscapetools::util_classify(rc_raster_pa$paisagem_01, weighting = 3)
binarized_raster
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(-Inf,4,0, 4,Inf,1))
binarized_raster
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(-Inf,3,0, 4,Inf,1))
binarized_raster
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(-Inf,3,0, 1,Inf,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(-Inf,3,0))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(-Inf,3,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(-Inf,3,0, 4,Inf,1))
binarized_raster
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 4,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 4))
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 3,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,4,0, 3,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,2,0, 3,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 3,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,1,0, 3,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,1,0, 2,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 4,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 3,4,1))
binarized_raster %>% plot
m <- c(0, 0.25, 1,  0.25, 0.5, 2,  0.5, 1, 3)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rclmat
r <- raster(ncols=36, nrows=18)
values(r) <- runif(ncell(r))
plot(r)
m <- c(0, 0.25, 1,  0.25, 0.5, 2,  0.5, 1, 3)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rclmat
rc <- reclassify(r, rclmat)
plot(rc)
m <- c(0, 0.5, 1,  0.5, 1, 3)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rclmat
rc <- reclassify(r, rclmat)
m <- c(0, 0.5, 1,  0.5, 1,2)
rclmat <- matrix(m, ncol=3, byrow=TRUE)
rclmat
rc <- reclassify(r, rclmat)
plot(rc)
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 3,4,1))
binarized_raster %>% plot
rc_raster_pa$paisagem_01
rc_raster_pa$paisagem_01[]
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,1,0, 2,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,2,0, 2,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,1,0, 2,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,1,0, 1,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
binarized_raster <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 3,4,1))
binarized_raster %>% plot
# spatialize landscape metric values --------------------------------------
rc_raster_pa01_bin <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 3,4,1))
# spatialize landscape metric values --------------------------------------
rc_raster_pa01_bin <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 3,4,1))
rc_raster_pa01_bin %>% plot
rc_raster_pa01_bin_lsm_p_area_raster <- landscapemetrics::spatialize_lsm(rc_raster_pa$paisagem_01,
what = "lsm_p_area",
progress = TRUE)
rc_raster_pa01_bin_lsm_p_area_raster
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_area)
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster$lsm_p_area)
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster)
rc_raster_pa01_bin_lsm_p_area_raster
rc_raster_pa01_bin_lsm_p_area_raster <- landscapemetrics::spatialize_lsm(rc_raster_pa01_bin,
what = "lsm_p_area",
progress = TRUE)
rc_raster_pa01_bin_lsm_p_area_raster
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_area)
# spatialize landscape metric values --------------------------------------
rc_raster_pa01_bin <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,0, 3,4,1))
rc_raster_pa01_bin %>% plot
# spatialize landscape metric values --------------------------------------
rc_raster_pa01_bin <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,NA, 3,4,1))
rc_raster_pa01_bin %>% plot
rc_raster_pa01_bin_lsm_p_area_raster <- landscapemetrics::spatialize_lsm(rc_raster_pa01_bin,
what = "lsm_p_area",
progress = TRUE)
rc_raster_pa01_bin_lsm_p_area_raster
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_area)
# spatialize landscape metric values --------------------------------------
rc_raster_pa01_bin <- raster::reclassify(x = rc_raster_pa$paisagem_01,
rcl = c(0,3,NA, 3,4,1))
rc_raster_pa01_bin %>% plot
rc_raster_pa01_bin_lsm_p_area_raster <- landscapemetrics::spatialize_lsm(rc_raster_pa01_bin,
what = "lsm_p_area",
progress = TRUE)
rc_raster_pa01_bin_lsm_p_area_raster
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_area)
rc_raster_pa01_bin_lsm_p_area_raster <- landscapemetrics::spatialize_lsm(rc_raster_pa01_bin,
what = "patch",
progress = TRUE)
rc_raster_pa01_bin_lsm_p_area_raster
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_area)
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_cai)
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_circle)
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_contig)
landscapetools::show_landscape(rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_core)
rc_raster_pa01_bin_lsm_p_area_raster
rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_area
names(rc_raster_pa)[i]
raster::writeRaster(x = rc_raster_pa01_bin_lsm_p_area_raster[[1]]$lsm_p_area,
filename = paste0("./02_dados/paisagem_01_p_area"),
format = "GTiff",
options = c("COMPRESS=DEFLATE" , "TFW=TRUE"),
overwrite = TRUE)
