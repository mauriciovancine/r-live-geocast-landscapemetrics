# preparar o r  -----------------------------------------------------------
# memoria
rm(list = ls())
# carregar pacotes
library(sf)
library(raster)
library(rgdal)
library(fasterize)
library(landscapetools)
library(landscapemetrics)
library(tmap)
library(ggspatial)
library(patchwork)
library(broom)
library(bbmle)
library(tidyverse)
# diretorios --------------------------------------------------------------
# conferir diretorio
getwd()
dir()
# mudar diretorio
setwd("02_dados")
# mudar diretorio
setwd(".."); setwd("02_dados")
# criar diretorios de saida
dir.create("mapas")
dir.create("metricas_lista")
dir.create("metricas_raster")
dir.create("metricas_tabelas")
dir.create("modelos")
dir.create("raster")
dir.create("vector")
# importar dados ----------------------------------------------------------
# download: http://geo.fbds.org.br/SP/RIO_CLARO na pasta 02_dados/vector
# import vector
rc <- sf::read_sf("./vector/SP_3543907_USO.shp")
# tabela de atributos
sf::st_drop_geometry(rc)
# mapa
ggplot() +
geom_sf(data = rc, aes(fill = CLASSE_USO), color = NA) +
scale_fill_manual(values = c("blue", "orange", "gray", "forestgreen", "green")) +
coord_sf() +
labs(x = "Longitude", y = "Latitude", fill = "Classes") +
annotation_scale(location = "br", width_hint = .3) +
annotation_north_arrow(location = "br", which_north = "true",
pad_x = unit(0, "cm"), pad_y = unit(.8, "cm"),
style = north_arrow_fancy_orienteering) +
theme_bw() +
theme(legend.position = c(.2, .2),
legend.background = element_rect(colour = "black"))
# criar uma coluna numerica para as classes de uso da terra
rc <- rc %>%
dplyr::mutate(classe_num = seq(5))
# tabela de atributos
sf::st_drop_geometry(rc)
# rasterizar --------------------------------------------------------------
# criar um raster vazio
ra <- fasterize::raster(rc, res = 30)
ra
# rasterizar
rc_raster <- fasterize::fasterize(sf = rc, raster = ra, field = "classe_num")
rc_raster
# mapa fasterize
fasterize::plot(rc_raster)
# mapa landscapetools
landscapetools::show_landscape(rc_raster, discrete = TRUE) +
scale_fill_manual(values = c("blue", "orange", "gray", "forestgreen", "green")) +
theme(legend.position = "none")
# mapa ggplot2
ggplot() +
geom_raster(data = raster::rasterToPoints(rc_raster) %>% tibble::as_tibble(),
aes(x, y, fill = factor(layer))) +
coord_sf() +
scale_fill_manual(values = c("blue", "orange", "gray", "forestgreen", "green")) +
labs(x = "Longitude", y = "Latitude", fill = "Classes") +
theme_bw() +
theme(legend.position = c(.2, .2),
axis.text.y = element_text(angle = 90, hjust = .5))
# mapa tmap
tm_shape(rc_raster, bbox = raster::bbox(rc_raster) + c(-1e3, -1e3, 1e3, 1e3)) +
tm_raster(style = "cat", palette = c("blue", "orange", "gray", "forestgreen", "green"),
title = "Classes") +
tm_grid(lines = FALSE, labels.rot = c(0, 90), labels.size = .8) +
tm_compass(position = c(.73, .08)) +
tm_scale_bar(position = c(.63, 0), text.size = .65) +
tm_layout(legend.position = c("left", "bottom"))
rc_raster
# rasterizar
rc_raster <- fasterize::fasterize(sf = rc, raster = ra, field = "classe_num")
rc_raster
rc
raster::crs(rc_raster) <- raster::crs(rc)
rc_raster
# mapa fasterize
fasterize::plot(rc_raster)
# mapa ggplot2
ggplot() +
geom_raster(data = raster::rasterToPoints(rc_raster) %>% tibble::as_tibble(),
aes(x, y, fill = factor(layer))) +
coord_sf() +
scale_fill_manual(values = c("blue", "orange", "gray", "forestgreen", "green")) +
labs(x = "Longitude", y = "Latitude", fill = "Classes") +
theme_bw() +
theme(legend.position = c(.2, .2),
axis.text.y = element_text(angle = 90, hjust = .5))
